#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct
{
    char* word[30];
    struct node* left;
    struct node* right;
} node;
node* newNode(char * str)
{
    node *n=malloc(sizeof(node));
    strcpy(n->word,str);
    n->left=n->right=NULL;
    return n;
}
node* insertNode(node* root, char* str)
{
    if (!root)
        root=newNode(str);
    else if (strcasecmp(str,root->word)<0)
        root->left=insertNode(root->left,str);
    else if (strcasecmp(str,root->word)>0)
        root->right=insertNode(root->right,str);
    return root;
}
node* load(node *root)
{
    FILE *fp;
    fp=fopen("EN-US-Dictionary.txt","r");
    if (!fp)
    {
        exit(1);
    }
    char str[30];
    while (!feof(fp))
    {
        fscanf(fp, "%s", str);
        root=insertNode(root,str);
    }
    fclose(fp);
    return root;
}
int countNodes(node* root)
{
    if (!root)
        return 0;
    else
        return 1+countNodes(root->left)+countNodes(root->right);
}
int max(int x, int y)
{
 return x>y?x:y;
}
int getHeight(node* root)
{
    if (!root)
        return -1;
    else return 1+max(getHeight(root->left),getHeight(root->right));
}

int SearchWord (node* root,char * Word)
{
    int comparison=0, found=0;
    while (root)
    {
    comparison = strcasecmp(Word,root->word);
    if (!comparison){
           found = 1;
           break;
    }
    else if (comparison<0)
        root=root->left;
    else if (comparison>0)
        root=root->right;
    }
    if (found)
        printf("%s - correct word\n",Word);
    else printf("%s - incorrect word, Suggestions\n", Word);
    return found;
}

void SearchSentence (node* root, char* text)
{
    char *token = strtok(text, " \n");
    while (token)
    {
        SearchWord(root, token);
        token = strtok(NULL, " \n");
    }
}

int main()
{   int check=0;
    node *root=NULL;
    root=load(root);
    if (root)
        printf("Dictionary was successfully loaded\n");
    else printf("Error loading dictionary");
    printf("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
    printf("Size=%d\n",countNodes(root));
    printf("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
    printf("Height=%d\n",getHeight(root));
    printf("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");
    printf("Enter a sentence: \n");
    char text[500];
    fgets(text,500,stdin);
    SearchSentence(root,text);
    return 0;
}
